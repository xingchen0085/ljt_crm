<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douples.pay.permission.dao.impl.RoleDaoImpl">

	<!-- Pms权限管理：角色表 -->
	<sql id="t_sys_role"> T_SYS_ROLE </sql>
	<sql id="t_sys_role_permission"> T_SYS_ROLE_PERMISSION </sql>

	<resultMap id="beanMap" type="com.douples.pay.permission.entity.Role">

		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="version" property="version" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
        <result column="CREATE_DATE" property="createDate" jdbcType="DATE"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="CREATE_USER_ID" property="createUserId" jdbcType="DECIMAL"/>
        <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR"/>
        <result column="UPDATE_DATE" property="updateDate" jdbcType="DATE"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_USER_ID" property="updateUserId" jdbcType="DECIMAL"/>
        <result column="UPDATE_USER_NAME" property="updateUserName" jdbcType="VARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
	</resultMap>

	<insert id="insert" parameterType="com.douples.pay.permission.entity.Role" keyProperty="id" useGeneratedKeys="true">
		insert into
		<include refid="t_sys_role" />

		(id,version,status,create_date,create_time,create_user_id,create_user_name,
        update_date,update_time,update_user_id,update_user_name, remark, role_code, role_name)
		values
		(#{id},0,#{status},#{createDate,jdbcType=DATE},
        #{createTime,jdbcType=TIMESTAMP},
        #{createUserId,jdbcType=DECIMAL},
        #{createUserName,jdbcType=VARCHAR},
        #{updateDate,jdbcType=DATE},
        #{updateTime,jdbcType=TIMESTAMP},
        #{updateUserId,jdbcType=DECIMAL},
        #{updateUserName,jdbcType=VARCHAR},#{remark},#{roleCode},#{roleName})
	</insert>

	<update id="update" parameterType="com.douples.pay.permission.entity.Role">
		update
		<include refid="t_sys_role" />
		<set>

			version = #{version}+1,
		    update_date = #{updateDate,jdbcType=DATE},
		    update_time = #{updateTime,jdbcType=TIMESTAMP},
		    update_user_id = #{updateUserId,jdbcType=VARCHAR},
		    update_user_name = #{updateUserName,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR},
			role_code = #{roleCode ,jdbcType=VARCHAR},
			role_name = #{roleName,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR }
		</set>
		<where>
			id = #{id} and version = #{version}
		</where>
	</update>

	<select id="selectByPrimaryKey" parameterType="Long" resultMap="beanMap">
		select * from
		<include refid="t_sys_role" />
		where id = #{id}
	</select>

	<select id="getByRoleNameOrRoleCode" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_sys_role" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="findByRoleNameNotEqId" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_sys_role" />
		where id != #{id} and role_name = #{roleName}
	</select>

	<select id="listAll" resultMap="beanMap">
		select * from
		<include refid="t_sys_role" />
		order by id
	</select>

	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from
		<include refid="t_sys_role" />
		where id = #{id}
	</delete>

	<sql id="condition_sql">
		<!-- Equal query -->
		<if test="roleCode != null and roleCode != ''"> and role_code = #{roleCode}</if>
		<!-- Like query -->
		<if test="roleName != null and roleName != ''"> and role_name like CONCAT(CONCAT('%', #{roleName}), '%')</if>
	</sql>

	<select id="listPage" parameterType="java.util.Map" resultMap="beanMap">
		select * from
		<include refid="t_sys_role" />
		<where>
			<include refid="condition_sql" />
		</where>
		<![CDATA[ order by id desc]]>
	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="long">
		select count(1) from
		<include refid="t_sys_role" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

	<select id="listByPermissionId" parameterType="Long" resultMap="beanMap">
		select R.* from
		<include refid="t_sys_role" />
		R
		LEFT JOIN
		<include refid="t_sys_role_permission" />
		RA
		ON R.id = RA.role_id where RA.permission_id = #{permissionId}
		order by R.id ASC
	</select>


</mapper>